version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "5000:5000"
    environment:
      - FASTAPI_ENV=production
      - DEBUG=False
      - API_PORT=5000
      - CORS_ORIGIN=https://quantum.xivix.com
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/quantum_circuits
    depends_on:
      - db
    networks:
      - quantum-net
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://api.quantum.xivix.com
    depends_on:
      - backend
    networks:
      - quantum-net
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=quantum_circuits
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quantum-net
    deploy:
      placement:
        constraints:
          - node.role == manager

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - frontend
      - backend
    networks:
      - quantum-net
    deploy:
      placement:
        constraints:
          - node.role == manager

  redis:
    image: redis:alpine
    networks:
      - quantum-net
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

networks:
  quantum-net:
    driver: overlay

volumes:
  postgres_data: